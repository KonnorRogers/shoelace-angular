{"ast":null,"code":"import _asyncToGenerator from \"/home/KonnorRogers/shoelace-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SlVisuallyHidden } from \"./chunk.TZZH7PEV.js\";\nimport { drag } from \"./chunk.A4SOQOK5.js\";\nimport { SlInput } from \"./chunk.USNAR5PF.js\";\nimport { SlDropdown } from \"./chunk.5B6MFQ7H.js\";\nimport { defaultValue } from \"./chunk.GI7VDIWX.js\";\nimport { color_picker_styles_default } from \"./chunk.BYIKSKAM.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { SlButton } from \"./chunk.TB5XWKML.js\";\nimport { FormControlController } from \"./chunk.UEQZEZFU.js\";\nimport { SlButtonGroup } from \"./chunk.2CQTQEGO.js\";\nimport { LocalizeController } from \"./chunk.2A3352EO.js\";\nimport { SlIcon } from \"./chunk.B7TJZ4WE.js\";\nimport { watch } from \"./chunk.Q6ASPMKT.js\";\nimport { ShoelaceElement } from \"./chunk.V6PFW22Q.js\";\nimport { __decorateClass } from \"./chunk.MAD5PUM2.js\";\n\n// src/components/color-picker/color-picker.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { property, query, state } from \"lit/decorators.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nvar hasEyeDropper = (\"EyeDropper\" in window);\nvar SlColorPicker = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.formControlController = new FormControlController(this);\n    this.isSafeValue = false;\n    this.localize = new LocalizeController(this);\n    this.hasFocus = false;\n    this.isDraggingGridHandle = false;\n    this.isEmpty = false;\n    this.inputValue = \"\";\n    this.hue = 0;\n    this.saturation = 100;\n    this.brightness = 100;\n    this.alpha = 100;\n    this.value = \"\";\n    this.defaultValue = \"\";\n    this.label = \"\";\n    this.format = \"hex\";\n    this.inline = false;\n    this.size = \"medium\";\n    this.noFormatToggle = false;\n    this.name = \"\";\n    this.disabled = false;\n    this.hoist = false;\n    this.opacity = false;\n    this.uppercase = false;\n    this.swatches = \"\";\n    this.form = \"\";\n    this.required = false;\n    this.handleFocusIn = () => {\n      this.hasFocus = true;\n      this.emit(\"sl-focus\");\n    };\n    this.handleFocusOut = () => {\n      this.hasFocus = false;\n      this.emit(\"sl-blur\");\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n  }\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n  firstUpdated() {\n    this.input.updateComplete.then(() => {\n      this.formControlController.updateValidity();\n    });\n  }\n  handleCopy() {\n    this.input.select();\n    document.execCommand(\"copy\");\n    this.previewButton.focus();\n    this.previewButton.classList.add(\"color-picker__preview-color--copied\");\n    this.previewButton.addEventListener(\"animationend\", () => {\n      this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n    });\n  }\n  handleFormatToggle() {\n    const formats = [\"hex\", \"rgb\", \"hsl\", \"hsv\"];\n    const nextIndex = (formats.indexOf(this.format) + 1) % formats.length;\n    this.format = formats[nextIndex];\n    this.setColor(this.value);\n    this.emit(\"sl-change\");\n    this.emit(\"sl-input\");\n  }\n  handleAlphaDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const {\n      width\n    } = container.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: x => {\n        this.alpha = clamp(x / width * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleHueDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const {\n      width\n    } = container.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: x => {\n        this.hue = clamp(x / width * 360, 0, 360);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleGridDrag(event) {\n    const grid = this.shadowRoot.querySelector(\".color-picker__grid\");\n    const handle = grid.querySelector(\".color-picker__grid-handle\");\n    const {\n      width,\n      height\n    } = grid.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    this.isDraggingGridHandle = true;\n    drag(grid, {\n      onMove: (x, y) => {\n        this.saturation = clamp(x / width * 100, 0, 100);\n        this.brightness = clamp(100 - y / height * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => this.isDraggingGridHandle = false,\n      initialEvent: event\n    });\n  }\n  handleAlphaKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.alpha = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.alpha = 100;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleHueKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue - increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue + increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.hue = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.hue = 360;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleGridKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness - increment, 0, 100);\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    const oldValue = this.value;\n    event.stopPropagation();\n    if (this.input.value) {\n      this.setColor(target.value);\n      target.value = this.value;\n    } else {\n      this.value = \"\";\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputInput(event) {\n    this.formControlController.updateValidity();\n    event.stopPropagation();\n  }\n  handleInputKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const oldValue = this.value;\n      if (this.input.value) {\n        this.setColor(this.input.value);\n        this.input.value = this.value;\n        if (this.value !== oldValue) {\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n        setTimeout(() => this.input.select());\n      } else {\n        this.hue = 0;\n      }\n    }\n  }\n  handleInputInvalid(event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n  handleTouchMove(event) {\n    event.preventDefault();\n  }\n  parseColor(colorString) {\n    const color = new TinyColor(colorString);\n    if (!color.isValid) {\n      return null;\n    }\n    const hslColor = color.toHsl();\n    const hsl = {\n      h: hslColor.h,\n      s: hslColor.s * 100,\n      l: hslColor.l * 100,\n      a: hslColor.a\n    };\n    const rgb = color.toRgb();\n    const hex = color.toHexString();\n    const hexa = color.toHex8String();\n    const hsvColor = color.toHsv();\n    const hsv = {\n      h: hsvColor.h,\n      s: hsvColor.s * 100,\n      v: hsvColor.v * 100,\n      a: hsvColor.a\n    };\n    return {\n      hsl: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        string: this.setLetterCase(`hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`)\n      },\n      hsla: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: hsl.a,\n        string: this.setLetterCase(`hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${hsl.a.toFixed(2).toString()})`)\n      },\n      hsv: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        string: this.setLetterCase(`hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)`)\n      },\n      hsva: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a,\n        string: this.setLetterCase(`hsva(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%, ${hsv.a.toFixed(2).toString()})`)\n      },\n      rgb: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        string: this.setLetterCase(`rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})`)\n      },\n      rgba: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        a: rgb.a,\n        string: this.setLetterCase(`rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${rgb.a.toFixed(2).toString()})`)\n      },\n      hex: this.setLetterCase(hex),\n      hexa: this.setLetterCase(hexa)\n    };\n  }\n  setColor(colorString) {\n    const newColor = this.parseColor(colorString);\n    if (newColor === null) {\n      return false;\n    }\n    this.hue = newColor.hsva.h;\n    this.saturation = newColor.hsva.s;\n    this.brightness = newColor.hsva.v;\n    this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;\n    this.syncValues();\n    return true;\n  }\n  setLetterCase(string) {\n    if (typeof string !== \"string\") {\n      return \"\";\n    }\n    return this.uppercase ? string.toUpperCase() : string.toLowerCase();\n  }\n  syncValues() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const currentColor = _this.parseColor(`hsva(${_this.hue}, ${_this.saturation}%, ${_this.brightness}%, ${_this.alpha / 100})`);\n      if (currentColor === null) {\n        return;\n      }\n      if (_this.format === \"hsl\") {\n        _this.inputValue = _this.opacity ? currentColor.hsla.string : currentColor.hsl.string;\n      } else if (_this.format === \"rgb\") {\n        _this.inputValue = _this.opacity ? currentColor.rgba.string : currentColor.rgb.string;\n      } else if (_this.format === \"hsv\") {\n        _this.inputValue = _this.opacity ? currentColor.hsva.string : currentColor.hsv.string;\n      } else {\n        _this.inputValue = _this.opacity ? currentColor.hexa : currentColor.hex;\n      }\n      _this.isSafeValue = true;\n      _this.value = _this.inputValue;\n      yield _this.updateComplete;\n      _this.isSafeValue = false;\n    })();\n  }\n  handleAfterHide() {\n    this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n  }\n  handleEyeDropper() {\n    if (!hasEyeDropper) {\n      return;\n    }\n    const eyeDropper = new EyeDropper();\n    eyeDropper.open().then(colorSelectionResult => {\n      const oldValue = this.value;\n      this.setColor(colorSelectionResult.sRGBHex);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }).catch(() => {});\n  }\n  selectSwatch(color) {\n    const oldValue = this.value;\n    if (!this.disabled) {\n      this.setColor(color);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }\n  /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */\n  getHexString(hue, saturation, brightness, alpha = 100) {\n    const color = new TinyColor(`hsva(${hue}, ${saturation}, ${brightness}, ${alpha / 100})`);\n    if (!color.isValid) {\n      return \"\";\n    }\n    return color.toHex8String();\n  }\n  // Prevents nested components from leaking events\n  stopNestedEventPropagation(event) {\n    event.stopImmediatePropagation();\n  }\n  handleFormatChange() {\n    this.syncValues();\n  }\n  handleOpacityChange() {\n    this.alpha = 100;\n  }\n  handleValueChange(oldValue, newValue) {\n    this.isEmpty = !newValue;\n    if (!newValue) {\n      this.hue = 0;\n      this.saturation = 0;\n      this.brightness = 100;\n      this.alpha = 100;\n    }\n    if (!this.isSafeValue) {\n      const newColor = this.parseColor(newValue);\n      if (newColor !== null) {\n        this.inputValue = this.value;\n        this.hue = newColor.hsva.h;\n        this.saturation = newColor.hsva.s;\n        this.brightness = newColor.hsva.v;\n        this.alpha = newColor.hsva.a * 100;\n        this.syncValues();\n      } else {\n        this.inputValue = oldValue != null ? oldValue : \"\";\n      }\n    }\n  }\n  /** Sets focus on the color picker. */\n  focus(options) {\n    if (this.inline) {\n      this.base.focus(options);\n    } else {\n      this.trigger.focus(options);\n    }\n  }\n  /** Removes focus from the color picker. */\n  blur() {\n    var _a;\n    const elementToBlur = this.inline ? this.base : this.trigger;\n    if (this.hasFocus) {\n      elementToBlur.focus({\n        preventScroll: true\n      });\n      elementToBlur.blur();\n    }\n    if ((_a = this.dropdown) == null ? void 0 : _a.open) {\n      this.dropdown.hide();\n    }\n  }\n  /** Returns the current value as a string in the specified format. */\n  getFormattedValue(format = \"hex\") {\n    const currentColor = this.parseColor(`hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`);\n    if (currentColor === null) {\n      return \"\";\n    }\n    switch (format) {\n      case \"hex\":\n        return currentColor.hex;\n      case \"hexa\":\n        return currentColor.hexa;\n      case \"rgb\":\n        return currentColor.rgb.string;\n      case \"rgba\":\n        return currentColor.rgba.string;\n      case \"hsl\":\n        return currentColor.hsl.string;\n      case \"hsla\":\n        return currentColor.hsla.string;\n      case \"hsv\":\n        return currentColor.hsv.string;\n      case \"hsva\":\n        return currentColor.hsva.string;\n      default:\n        return \"\";\n    }\n  }\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n  /** Gets the associated form, if one exists. */\n  getForm() {\n    return this.formControlController.getForm();\n  }\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    if (!this.inline && !this.validity.valid) {\n      this.dropdown.show();\n      this.addEventListener(\"sl-after-show\", () => this.input.reportValidity(), {\n        once: true\n      });\n      if (!this.disabled) {\n        this.formControlController.emitInvalidEvent();\n      }\n      return false;\n    }\n    return this.input.reportValidity();\n  }\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n  render() {\n    const gridHandleX = this.saturation;\n    const gridHandleY = 100 - this.brightness;\n    const swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter(color => color.trim() !== \"\");\n    const colorPicker = html`\n      <div\n        part=\"base\"\n        class=${classMap({\n      \"color-picker\": true,\n      \"color-picker--inline\": this.inline,\n      \"color-picker--disabled\": this.disabled,\n      \"color-picker--focused\": this.hasFocus\n    })}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-labelledby=\"label\"\n        tabindex=${this.inline ? \"0\" : \"-1\"}\n      >\n        ${this.inline ? html`\n              <sl-visually-hidden id=\"label\">\n                <slot name=\"label\">${this.label}</slot>\n              </sl-visually-hidden>\n            ` : null}\n\n        <div\n          part=\"grid\"\n          class=\"color-picker__grid\"\n          style=${styleMap({\n      backgroundColor: this.getHexString(this.hue, 100, 100)\n    })}\n          @pointerdown=${this.handleGridDrag}\n          @touchmove=${this.handleTouchMove}\n        >\n          <span\n            part=\"grid-handle\"\n            class=${classMap({\n      \"color-picker__grid-handle\": true,\n      \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle\n    })}\n            style=${styleMap({\n      top: `${gridHandleY}%`,\n      left: `${gridHandleX}%`,\n      backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            role=\"application\"\n            aria-label=\"HSV\"\n            tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n            @keydown=${this.handleGridKeyDown}\n          ></span>\n        </div>\n\n        <div class=\"color-picker__controls\">\n          <div class=\"color-picker__sliders\">\n            <div\n              part=\"slider hue-slider\"\n              class=\"color-picker__hue color-picker__slider\"\n              @pointerdown=${this.handleHueDrag}\n              @touchmove=${this.handleTouchMove}\n            >\n              <span\n                part=\"slider-handle hue-slider-handle\"\n                class=\"color-picker__slider-handle\"\n                style=${styleMap({\n      left: `${this.hue === 0 ? 0 : 100 / (360 / this.hue)}%`\n    })}\n                role=\"slider\"\n                aria-label=\"hue\"\n                aria-orientation=\"horizontal\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"360\"\n                aria-valuenow=${`${Math.round(this.hue)}`}\n                tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                @keydown=${this.handleHueKeyDown}\n              ></span>\n            </div>\n\n            ${this.opacity ? html`\n                  <div\n                    part=\"slider opacity-slider\"\n                    class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\"\n                    @pointerdown=\"${this.handleAlphaDrag}\"\n                    @touchmove=${this.handleTouchMove}\n                  >\n                    <div\n                      class=\"color-picker__alpha-gradient\"\n                      style=${styleMap({\n      backgroundImage: `linear-gradient(\n                          to right,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 0)} 0%,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 100)} 100%\n                        )`\n    })}\n                    ></div>\n                    <span\n                      part=\"slider-handle opacity-slider-handle\"\n                      class=\"color-picker__slider-handle\"\n                      style=${styleMap({\n      left: `${this.alpha}%`\n    })}\n                      role=\"slider\"\n                      aria-label=\"alpha\"\n                      aria-orientation=\"horizontal\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow=${Math.round(this.alpha)}\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      @keydown=${this.handleAlphaKeyDown}\n                    ></span>\n                  </div>\n                ` : \"\"}\n          </div>\n\n          <button\n            type=\"button\"\n            part=\"preview\"\n            class=\"color-picker__preview color-picker__transparent-bg\"\n            aria-label=${this.localize.term(\"copy\")}\n            style=${styleMap({\n      \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            @click=${this.handleCopy}\n          ></button>\n        </div>\n\n        <div class=\"color-picker__user-input\" aria-live=\"polite\">\n          <sl-input\n            part=\"input\"\n            type=\"text\"\n            name=${this.name}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            value=${this.isEmpty ? \"\" : this.inputValue}\n            ?required=${this.required}\n            ?disabled=${this.disabled}\n            aria-label=${this.localize.term(\"currentValue\")}\n            @keydown=${this.handleInputKeyDown}\n            @sl-change=${this.handleInputChange}\n            @sl-input=${this.handleInputInput}\n            @sl-invalid=${this.handleInputInvalid}\n            @sl-blur=${this.stopNestedEventPropagation}\n            @sl-focus=${this.stopNestedEventPropagation}\n          ></sl-input>\n\n          <sl-button-group>\n            ${!this.noFormatToggle ? html`\n                  <sl-button\n                    part=\"format-button\"\n                    aria-label=${this.localize.term(\"toggleColorFormat\")}\n                    exportparts=\"\n                      base:format-button__base,\n                      prefix:format-button__prefix,\n                      label:format-button__label,\n                      suffix:format-button__suffix,\n                      caret:format-button__caret\n                    \"\n                    @click=${this.handleFormatToggle}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    ${this.setLetterCase(this.format)}\n                  </sl-button>\n                ` : \"\"}\n            ${hasEyeDropper ? html`\n                  <sl-button\n                    part=\"eye-dropper-button\"\n                    exportparts=\"\n                      base:eye-dropper-button__base,\n                      prefix:eye-dropper-button__prefix,\n                      label:eye-dropper-button__label,\n                      suffix:eye-dropper-button__suffix,\n                      caret:eye-dropper-button__caret\n                    \"\n                    @click=${this.handleEyeDropper}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    <sl-icon\n                      library=\"system\"\n                      name=\"eyedropper\"\n                      label=${this.localize.term(\"selectAColorFromTheScreen\")}\n                    ></sl-icon>\n                  </sl-button>\n                ` : \"\"}\n          </sl-button-group>\n        </div>\n\n        ${swatches.length > 0 ? html`\n              <div part=\"swatches\" class=\"color-picker__swatches\">\n                ${swatches.map(swatch => {\n      const parsedColor = this.parseColor(swatch);\n      if (!parsedColor) {\n        console.error(`Unable to parse swatch color: \"${swatch}\"`, this);\n        return \"\";\n      }\n      return html`\n                    <div\n                      part=\"swatch\"\n                      class=\"color-picker__swatch color-picker__transparent-bg\"\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      role=\"button\"\n                      aria-label=${swatch}\n                      @click=${() => this.selectSwatch(swatch)}\n                      @keydown=${event => !this.disabled && event.key === \"Enter\" && this.setColor(parsedColor.hexa)}\n                    >\n                      <div\n                        class=\"color-picker__swatch-color\"\n                        style=${styleMap({\n        backgroundColor: parsedColor.hexa\n      })}\n                      ></div>\n                    </div>\n                  `;\n    })}\n              </div>\n            ` : \"\"}\n      </div>\n    `;\n    if (this.inline) {\n      return colorPicker;\n    }\n    return html`\n      <sl-dropdown\n        class=\"color-dropdown\"\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        .containing-element=${this}\n        ?disabled=${this.disabled}\n        ?hoist=${this.hoist}\n        @sl-after-hide=${this.handleAfterHide}\n      >\n        <button\n          part=\"trigger\"\n          slot=\"trigger\"\n          class=${classMap({\n      \"color-dropdown__trigger\": true,\n      \"color-dropdown__trigger--disabled\": this.disabled,\n      \"color-dropdown__trigger--small\": this.size === \"small\",\n      \"color-dropdown__trigger--medium\": this.size === \"medium\",\n      \"color-dropdown__trigger--large\": this.size === \"large\",\n      \"color-dropdown__trigger--empty\": this.isEmpty,\n      \"color-dropdown__trigger--focused\": this.hasFocus,\n      \"color-picker__transparent-bg\": true\n    })}\n          style=${styleMap({\n      color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n          type=\"button\"\n        >\n          <sl-visually-hidden>\n            <slot name=\"label\">${this.label}</slot>\n          </sl-visually-hidden>\n        </button>\n        ${colorPicker}\n      </sl-dropdown>\n    `;\n  }\n};\nSlColorPicker.styles = color_picker_styles_default;\nSlColorPicker.dependencies = {\n  \"sl-button-group\": SlButtonGroup,\n  \"sl-button\": SlButton,\n  \"sl-dropdown\": SlDropdown,\n  \"sl-icon\": SlIcon,\n  \"sl-input\": SlInput,\n  \"sl-visually-hidden\": SlVisuallyHidden\n};\n__decorateClass([query('[part~=\"base\"]')], SlColorPicker.prototype, \"base\", 2);\n__decorateClass([query('[part~=\"input\"]')], SlColorPicker.prototype, \"input\", 2);\n__decorateClass([query(\".color-dropdown\")], SlColorPicker.prototype, \"dropdown\", 2);\n__decorateClass([query('[part~=\"preview\"]')], SlColorPicker.prototype, \"previewButton\", 2);\n__decorateClass([query('[part~=\"trigger\"]')], SlColorPicker.prototype, \"trigger\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"hasFocus\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"isDraggingGridHandle\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"isEmpty\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"inputValue\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"hue\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"saturation\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"brightness\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"alpha\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"value\", 2);\n__decorateClass([defaultValue()], SlColorPicker.prototype, \"defaultValue\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"label\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"format\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"inline\", 2);\n__decorateClass([property({\n  reflect: true\n})], SlColorPicker.prototype, \"size\", 2);\n__decorateClass([property({\n  attribute: \"no-format-toggle\",\n  type: Boolean\n})], SlColorPicker.prototype, \"noFormatToggle\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"name\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"disabled\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"hoist\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"opacity\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"uppercase\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"swatches\", 2);\n__decorateClass([property({\n  reflect: true\n})], SlColorPicker.prototype, \"form\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"required\", 2);\n__decorateClass([watch(\"format\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleFormatChange\", 1);\n__decorateClass([watch(\"opacity\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleOpacityChange\", 1);\n__decorateClass([watch(\"value\")], SlColorPicker.prototype, \"handleValueChange\", 1);\nexport { SlColorPicker };","map":{"version":3,"names":["SlVisuallyHidden","drag","SlInput","SlDropdown","defaultValue","color_picker_styles_default","clamp","SlButton","FormControlController","SlButtonGroup","LocalizeController","SlIcon","watch","ShoelaceElement","__decorateClass","classMap","html","ifDefined","property","query","state","styleMap","TinyColor","hasEyeDropper","window","SlColorPicker","constructor","formControlController","isSafeValue","localize","hasFocus","isDraggingGridHandle","isEmpty","inputValue","hue","saturation","brightness","alpha","value","label","format","inline","size","noFormatToggle","name","disabled","hoist","opacity","uppercase","swatches","form","required","handleFocusIn","emit","handleFocusOut","addEventListener","validity","input","validationMessage","firstUpdated","updateComplete","then","updateValidity","handleCopy","select","document","execCommand","previewButton","focus","classList","add","remove","handleFormatToggle","formats","nextIndex","indexOf","length","setColor","handleAlphaDrag","event","container","shadowRoot","querySelector","handle","width","getBoundingClientRect","oldValue","preventDefault","onMove","x","syncValues","initialEvent","handleHueDrag","handleGridDrag","grid","height","y","onStop","handleAlphaKeyDown","increment","shiftKey","key","handleHueKeyDown","handleGridKeyDown","handleInputChange","target","stopPropagation","handleInputInput","handleInputKeyDown","setTimeout","handleInputInvalid","setValidity","emitInvalidEvent","handleTouchMove","parseColor","colorString","color","isValid","hslColor","toHsl","hsl","h","s","l","a","rgb","toRgb","hex","toHexString","hexa","toHex8String","hsvColor","toHsv","hsv","v","string","setLetterCase","Math","round","hsla","toFixed","toString","hsva","r","g","b","rgba","newColor","toUpperCase","toLowerCase","_this","_asyncToGenerator","currentColor","handleAfterHide","handleEyeDropper","eyeDropper","EyeDropper","open","colorSelectionResult","sRGBHex","catch","selectSwatch","getHexString","stopNestedEventPropagation","stopImmediatePropagation","handleFormatChange","handleOpacityChange","handleValueChange","newValue","options","base","trigger","blur","_a","elementToBlur","preventScroll","dropdown","hide","getFormattedValue","checkValidity","getForm","reportValidity","valid","show","once","setCustomValidity","message","render","gridHandleX","gridHandleY","Array","isArray","split","filter","trim","colorPicker","backgroundColor","top","left","backgroundImage","term","map","swatch","parsedColor","console","error","styles","dependencies","prototype","type","Boolean","reflect","attribute","waitUntilFirstUpdate"],"sources":["/home/KonnorRogers/shoelace-angular/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.PN7F5BW6.js"],"sourcesContent":["import {\n  SlVisuallyHidden\n} from \"./chunk.TZZH7PEV.js\";\nimport {\n  drag\n} from \"./chunk.A4SOQOK5.js\";\nimport {\n  SlInput\n} from \"./chunk.USNAR5PF.js\";\nimport {\n  SlDropdown\n} from \"./chunk.5B6MFQ7H.js\";\nimport {\n  defaultValue\n} from \"./chunk.GI7VDIWX.js\";\nimport {\n  color_picker_styles_default\n} from \"./chunk.BYIKSKAM.js\";\nimport {\n  clamp\n} from \"./chunk.HF7GESMZ.js\";\nimport {\n  SlButton\n} from \"./chunk.TB5XWKML.js\";\nimport {\n  FormControlController\n} from \"./chunk.UEQZEZFU.js\";\nimport {\n  SlButtonGroup\n} from \"./chunk.2CQTQEGO.js\";\nimport {\n  LocalizeController\n} from \"./chunk.2A3352EO.js\";\nimport {\n  SlIcon\n} from \"./chunk.B7TJZ4WE.js\";\nimport {\n  watch\n} from \"./chunk.Q6ASPMKT.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.V6PFW22Q.js\";\nimport {\n  __decorateClass\n} from \"./chunk.MAD5PUM2.js\";\n\n// src/components/color-picker/color-picker.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { property, query, state } from \"lit/decorators.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nvar hasEyeDropper = \"EyeDropper\" in window;\nvar SlColorPicker = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.formControlController = new FormControlController(this);\n    this.isSafeValue = false;\n    this.localize = new LocalizeController(this);\n    this.hasFocus = false;\n    this.isDraggingGridHandle = false;\n    this.isEmpty = false;\n    this.inputValue = \"\";\n    this.hue = 0;\n    this.saturation = 100;\n    this.brightness = 100;\n    this.alpha = 100;\n    this.value = \"\";\n    this.defaultValue = \"\";\n    this.label = \"\";\n    this.format = \"hex\";\n    this.inline = false;\n    this.size = \"medium\";\n    this.noFormatToggle = false;\n    this.name = \"\";\n    this.disabled = false;\n    this.hoist = false;\n    this.opacity = false;\n    this.uppercase = false;\n    this.swatches = \"\";\n    this.form = \"\";\n    this.required = false;\n    this.handleFocusIn = () => {\n      this.hasFocus = true;\n      this.emit(\"sl-focus\");\n    };\n    this.handleFocusOut = () => {\n      this.hasFocus = false;\n      this.emit(\"sl-blur\");\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n  }\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n  firstUpdated() {\n    this.input.updateComplete.then(() => {\n      this.formControlController.updateValidity();\n    });\n  }\n  handleCopy() {\n    this.input.select();\n    document.execCommand(\"copy\");\n    this.previewButton.focus();\n    this.previewButton.classList.add(\"color-picker__preview-color--copied\");\n    this.previewButton.addEventListener(\"animationend\", () => {\n      this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n    });\n  }\n  handleFormatToggle() {\n    const formats = [\"hex\", \"rgb\", \"hsl\", \"hsv\"];\n    const nextIndex = (formats.indexOf(this.format) + 1) % formats.length;\n    this.format = formats[nextIndex];\n    this.setColor(this.value);\n    this.emit(\"sl-change\");\n    this.emit(\"sl-input\");\n  }\n  handleAlphaDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const { width } = container.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: (x) => {\n        this.alpha = clamp(x / width * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleHueDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const { width } = container.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: (x) => {\n        this.hue = clamp(x / width * 360, 0, 360);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleGridDrag(event) {\n    const grid = this.shadowRoot.querySelector(\".color-picker__grid\");\n    const handle = grid.querySelector(\".color-picker__grid-handle\");\n    const { width, height } = grid.getBoundingClientRect();\n    let oldValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    this.isDraggingGridHandle = true;\n    drag(grid, {\n      onMove: (x, y) => {\n        this.saturation = clamp(x / width * 100, 0, 100);\n        this.brightness = clamp(100 - y / height * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== oldValue) {\n          oldValue = this.value;\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => this.isDraggingGridHandle = false,\n      initialEvent: event\n    });\n  }\n  handleAlphaKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.alpha = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.alpha = 100;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleHueKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue - increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue + increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.hue = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.hue = 360;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleGridKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness - increment, 0, 100);\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    const oldValue = this.value;\n    event.stopPropagation();\n    if (this.input.value) {\n      this.setColor(target.value);\n      target.value = this.value;\n    } else {\n      this.value = \"\";\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputInput(event) {\n    this.formControlController.updateValidity();\n    event.stopPropagation();\n  }\n  handleInputKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const oldValue = this.value;\n      if (this.input.value) {\n        this.setColor(this.input.value);\n        this.input.value = this.value;\n        if (this.value !== oldValue) {\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n        setTimeout(() => this.input.select());\n      } else {\n        this.hue = 0;\n      }\n    }\n  }\n  handleInputInvalid(event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n  handleTouchMove(event) {\n    event.preventDefault();\n  }\n  parseColor(colorString) {\n    const color = new TinyColor(colorString);\n    if (!color.isValid) {\n      return null;\n    }\n    const hslColor = color.toHsl();\n    const hsl = {\n      h: hslColor.h,\n      s: hslColor.s * 100,\n      l: hslColor.l * 100,\n      a: hslColor.a\n    };\n    const rgb = color.toRgb();\n    const hex = color.toHexString();\n    const hexa = color.toHex8String();\n    const hsvColor = color.toHsv();\n    const hsv = {\n      h: hsvColor.h,\n      s: hsvColor.s * 100,\n      v: hsvColor.v * 100,\n      a: hsvColor.a\n    };\n    return {\n      hsl: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        string: this.setLetterCase(`hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`)\n      },\n      hsla: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: hsl.a,\n        string: this.setLetterCase(\n          `hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${hsl.a.toFixed(2).toString()})`\n        )\n      },\n      hsv: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        string: this.setLetterCase(`hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)`)\n      },\n      hsva: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a,\n        string: this.setLetterCase(\n          `hsva(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%, ${hsv.a.toFixed(2).toString()})`\n        )\n      },\n      rgb: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        string: this.setLetterCase(`rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})`)\n      },\n      rgba: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        a: rgb.a,\n        string: this.setLetterCase(\n          `rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${rgb.a.toFixed(2).toString()})`\n        )\n      },\n      hex: this.setLetterCase(hex),\n      hexa: this.setLetterCase(hexa)\n    };\n  }\n  setColor(colorString) {\n    const newColor = this.parseColor(colorString);\n    if (newColor === null) {\n      return false;\n    }\n    this.hue = newColor.hsva.h;\n    this.saturation = newColor.hsva.s;\n    this.brightness = newColor.hsva.v;\n    this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;\n    this.syncValues();\n    return true;\n  }\n  setLetterCase(string) {\n    if (typeof string !== \"string\") {\n      return \"\";\n    }\n    return this.uppercase ? string.toUpperCase() : string.toLowerCase();\n  }\n  async syncValues() {\n    const currentColor = this.parseColor(\n      `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`\n    );\n    if (currentColor === null) {\n      return;\n    }\n    if (this.format === \"hsl\") {\n      this.inputValue = this.opacity ? currentColor.hsla.string : currentColor.hsl.string;\n    } else if (this.format === \"rgb\") {\n      this.inputValue = this.opacity ? currentColor.rgba.string : currentColor.rgb.string;\n    } else if (this.format === \"hsv\") {\n      this.inputValue = this.opacity ? currentColor.hsva.string : currentColor.hsv.string;\n    } else {\n      this.inputValue = this.opacity ? currentColor.hexa : currentColor.hex;\n    }\n    this.isSafeValue = true;\n    this.value = this.inputValue;\n    await this.updateComplete;\n    this.isSafeValue = false;\n  }\n  handleAfterHide() {\n    this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n  }\n  handleEyeDropper() {\n    if (!hasEyeDropper) {\n      return;\n    }\n    const eyeDropper = new EyeDropper();\n    eyeDropper.open().then((colorSelectionResult) => {\n      const oldValue = this.value;\n      this.setColor(colorSelectionResult.sRGBHex);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }).catch(() => {\n    });\n  }\n  selectSwatch(color) {\n    const oldValue = this.value;\n    if (!this.disabled) {\n      this.setColor(color);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }\n  /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */\n  getHexString(hue, saturation, brightness, alpha = 100) {\n    const color = new TinyColor(`hsva(${hue}, ${saturation}, ${brightness}, ${alpha / 100})`);\n    if (!color.isValid) {\n      return \"\";\n    }\n    return color.toHex8String();\n  }\n  // Prevents nested components from leaking events\n  stopNestedEventPropagation(event) {\n    event.stopImmediatePropagation();\n  }\n  handleFormatChange() {\n    this.syncValues();\n  }\n  handleOpacityChange() {\n    this.alpha = 100;\n  }\n  handleValueChange(oldValue, newValue) {\n    this.isEmpty = !newValue;\n    if (!newValue) {\n      this.hue = 0;\n      this.saturation = 0;\n      this.brightness = 100;\n      this.alpha = 100;\n    }\n    if (!this.isSafeValue) {\n      const newColor = this.parseColor(newValue);\n      if (newColor !== null) {\n        this.inputValue = this.value;\n        this.hue = newColor.hsva.h;\n        this.saturation = newColor.hsva.s;\n        this.brightness = newColor.hsva.v;\n        this.alpha = newColor.hsva.a * 100;\n        this.syncValues();\n      } else {\n        this.inputValue = oldValue != null ? oldValue : \"\";\n      }\n    }\n  }\n  /** Sets focus on the color picker. */\n  focus(options) {\n    if (this.inline) {\n      this.base.focus(options);\n    } else {\n      this.trigger.focus(options);\n    }\n  }\n  /** Removes focus from the color picker. */\n  blur() {\n    var _a;\n    const elementToBlur = this.inline ? this.base : this.trigger;\n    if (this.hasFocus) {\n      elementToBlur.focus({ preventScroll: true });\n      elementToBlur.blur();\n    }\n    if ((_a = this.dropdown) == null ? void 0 : _a.open) {\n      this.dropdown.hide();\n    }\n  }\n  /** Returns the current value as a string in the specified format. */\n  getFormattedValue(format = \"hex\") {\n    const currentColor = this.parseColor(\n      `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`\n    );\n    if (currentColor === null) {\n      return \"\";\n    }\n    switch (format) {\n      case \"hex\":\n        return currentColor.hex;\n      case \"hexa\":\n        return currentColor.hexa;\n      case \"rgb\":\n        return currentColor.rgb.string;\n      case \"rgba\":\n        return currentColor.rgba.string;\n      case \"hsl\":\n        return currentColor.hsl.string;\n      case \"hsla\":\n        return currentColor.hsla.string;\n      case \"hsv\":\n        return currentColor.hsv.string;\n      case \"hsva\":\n        return currentColor.hsva.string;\n      default:\n        return \"\";\n    }\n  }\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n  /** Gets the associated form, if one exists. */\n  getForm() {\n    return this.formControlController.getForm();\n  }\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    if (!this.inline && !this.validity.valid) {\n      this.dropdown.show();\n      this.addEventListener(\"sl-after-show\", () => this.input.reportValidity(), { once: true });\n      if (!this.disabled) {\n        this.formControlController.emitInvalidEvent();\n      }\n      return false;\n    }\n    return this.input.reportValidity();\n  }\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n  render() {\n    const gridHandleX = this.saturation;\n    const gridHandleY = 100 - this.brightness;\n    const swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter((color) => color.trim() !== \"\");\n    const colorPicker = html`\n      <div\n        part=\"base\"\n        class=${classMap({\n      \"color-picker\": true,\n      \"color-picker--inline\": this.inline,\n      \"color-picker--disabled\": this.disabled,\n      \"color-picker--focused\": this.hasFocus\n    })}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-labelledby=\"label\"\n        tabindex=${this.inline ? \"0\" : \"-1\"}\n      >\n        ${this.inline ? html`\n              <sl-visually-hidden id=\"label\">\n                <slot name=\"label\">${this.label}</slot>\n              </sl-visually-hidden>\n            ` : null}\n\n        <div\n          part=\"grid\"\n          class=\"color-picker__grid\"\n          style=${styleMap({ backgroundColor: this.getHexString(this.hue, 100, 100) })}\n          @pointerdown=${this.handleGridDrag}\n          @touchmove=${this.handleTouchMove}\n        >\n          <span\n            part=\"grid-handle\"\n            class=${classMap({\n      \"color-picker__grid-handle\": true,\n      \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle\n    })}\n            style=${styleMap({\n      top: `${gridHandleY}%`,\n      left: `${gridHandleX}%`,\n      backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            role=\"application\"\n            aria-label=\"HSV\"\n            tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n            @keydown=${this.handleGridKeyDown}\n          ></span>\n        </div>\n\n        <div class=\"color-picker__controls\">\n          <div class=\"color-picker__sliders\">\n            <div\n              part=\"slider hue-slider\"\n              class=\"color-picker__hue color-picker__slider\"\n              @pointerdown=${this.handleHueDrag}\n              @touchmove=${this.handleTouchMove}\n            >\n              <span\n                part=\"slider-handle hue-slider-handle\"\n                class=\"color-picker__slider-handle\"\n                style=${styleMap({\n      left: `${this.hue === 0 ? 0 : 100 / (360 / this.hue)}%`\n    })}\n                role=\"slider\"\n                aria-label=\"hue\"\n                aria-orientation=\"horizontal\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"360\"\n                aria-valuenow=${`${Math.round(this.hue)}`}\n                tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                @keydown=${this.handleHueKeyDown}\n              ></span>\n            </div>\n\n            ${this.opacity ? html`\n                  <div\n                    part=\"slider opacity-slider\"\n                    class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\"\n                    @pointerdown=\"${this.handleAlphaDrag}\"\n                    @touchmove=${this.handleTouchMove}\n                  >\n                    <div\n                      class=\"color-picker__alpha-gradient\"\n                      style=${styleMap({\n      backgroundImage: `linear-gradient(\n                          to right,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 0)} 0%,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 100)} 100%\n                        )`\n    })}\n                    ></div>\n                    <span\n                      part=\"slider-handle opacity-slider-handle\"\n                      class=\"color-picker__slider-handle\"\n                      style=${styleMap({\n      left: `${this.alpha}%`\n    })}\n                      role=\"slider\"\n                      aria-label=\"alpha\"\n                      aria-orientation=\"horizontal\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow=${Math.round(this.alpha)}\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      @keydown=${this.handleAlphaKeyDown}\n                    ></span>\n                  </div>\n                ` : \"\"}\n          </div>\n\n          <button\n            type=\"button\"\n            part=\"preview\"\n            class=\"color-picker__preview color-picker__transparent-bg\"\n            aria-label=${this.localize.term(\"copy\")}\n            style=${styleMap({\n      \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            @click=${this.handleCopy}\n          ></button>\n        </div>\n\n        <div class=\"color-picker__user-input\" aria-live=\"polite\">\n          <sl-input\n            part=\"input\"\n            type=\"text\"\n            name=${this.name}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            value=${this.isEmpty ? \"\" : this.inputValue}\n            ?required=${this.required}\n            ?disabled=${this.disabled}\n            aria-label=${this.localize.term(\"currentValue\")}\n            @keydown=${this.handleInputKeyDown}\n            @sl-change=${this.handleInputChange}\n            @sl-input=${this.handleInputInput}\n            @sl-invalid=${this.handleInputInvalid}\n            @sl-blur=${this.stopNestedEventPropagation}\n            @sl-focus=${this.stopNestedEventPropagation}\n          ></sl-input>\n\n          <sl-button-group>\n            ${!this.noFormatToggle ? html`\n                  <sl-button\n                    part=\"format-button\"\n                    aria-label=${this.localize.term(\"toggleColorFormat\")}\n                    exportparts=\"\n                      base:format-button__base,\n                      prefix:format-button__prefix,\n                      label:format-button__label,\n                      suffix:format-button__suffix,\n                      caret:format-button__caret\n                    \"\n                    @click=${this.handleFormatToggle}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    ${this.setLetterCase(this.format)}\n                  </sl-button>\n                ` : \"\"}\n            ${hasEyeDropper ? html`\n                  <sl-button\n                    part=\"eye-dropper-button\"\n                    exportparts=\"\n                      base:eye-dropper-button__base,\n                      prefix:eye-dropper-button__prefix,\n                      label:eye-dropper-button__label,\n                      suffix:eye-dropper-button__suffix,\n                      caret:eye-dropper-button__caret\n                    \"\n                    @click=${this.handleEyeDropper}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    <sl-icon\n                      library=\"system\"\n                      name=\"eyedropper\"\n                      label=${this.localize.term(\"selectAColorFromTheScreen\")}\n                    ></sl-icon>\n                  </sl-button>\n                ` : \"\"}\n          </sl-button-group>\n        </div>\n\n        ${swatches.length > 0 ? html`\n              <div part=\"swatches\" class=\"color-picker__swatches\">\n                ${swatches.map((swatch) => {\n      const parsedColor = this.parseColor(swatch);\n      if (!parsedColor) {\n        console.error(`Unable to parse swatch color: \"${swatch}\"`, this);\n        return \"\";\n      }\n      return html`\n                    <div\n                      part=\"swatch\"\n                      class=\"color-picker__swatch color-picker__transparent-bg\"\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      role=\"button\"\n                      aria-label=${swatch}\n                      @click=${() => this.selectSwatch(swatch)}\n                      @keydown=${(event) => !this.disabled && event.key === \"Enter\" && this.setColor(parsedColor.hexa)}\n                    >\n                      <div\n                        class=\"color-picker__swatch-color\"\n                        style=${styleMap({ backgroundColor: parsedColor.hexa })}\n                      ></div>\n                    </div>\n                  `;\n    })}\n              </div>\n            ` : \"\"}\n      </div>\n    `;\n    if (this.inline) {\n      return colorPicker;\n    }\n    return html`\n      <sl-dropdown\n        class=\"color-dropdown\"\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        .containing-element=${this}\n        ?disabled=${this.disabled}\n        ?hoist=${this.hoist}\n        @sl-after-hide=${this.handleAfterHide}\n      >\n        <button\n          part=\"trigger\"\n          slot=\"trigger\"\n          class=${classMap({\n      \"color-dropdown__trigger\": true,\n      \"color-dropdown__trigger--disabled\": this.disabled,\n      \"color-dropdown__trigger--small\": this.size === \"small\",\n      \"color-dropdown__trigger--medium\": this.size === \"medium\",\n      \"color-dropdown__trigger--large\": this.size === \"large\",\n      \"color-dropdown__trigger--empty\": this.isEmpty,\n      \"color-dropdown__trigger--focused\": this.hasFocus,\n      \"color-picker__transparent-bg\": true\n    })}\n          style=${styleMap({\n      color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n          type=\"button\"\n        >\n          <sl-visually-hidden>\n            <slot name=\"label\">${this.label}</slot>\n          </sl-visually-hidden>\n        </button>\n        ${colorPicker}\n      </sl-dropdown>\n    `;\n  }\n};\nSlColorPicker.styles = color_picker_styles_default;\nSlColorPicker.dependencies = {\n  \"sl-button-group\": SlButtonGroup,\n  \"sl-button\": SlButton,\n  \"sl-dropdown\": SlDropdown,\n  \"sl-icon\": SlIcon,\n  \"sl-input\": SlInput,\n  \"sl-visually-hidden\": SlVisuallyHidden\n};\n__decorateClass([\n  query('[part~=\"base\"]')\n], SlColorPicker.prototype, \"base\", 2);\n__decorateClass([\n  query('[part~=\"input\"]')\n], SlColorPicker.prototype, \"input\", 2);\n__decorateClass([\n  query(\".color-dropdown\")\n], SlColorPicker.prototype, \"dropdown\", 2);\n__decorateClass([\n  query('[part~=\"preview\"]')\n], SlColorPicker.prototype, \"previewButton\", 2);\n__decorateClass([\n  query('[part~=\"trigger\"]')\n], SlColorPicker.prototype, \"trigger\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"hasFocus\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"isDraggingGridHandle\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"isEmpty\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"inputValue\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"hue\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"saturation\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"brightness\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"alpha\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"value\", 2);\n__decorateClass([\n  defaultValue()\n], SlColorPicker.prototype, \"defaultValue\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"format\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"inline\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlColorPicker.prototype, \"size\", 2);\n__decorateClass([\n  property({ attribute: \"no-format-toggle\", type: Boolean })\n], SlColorPicker.prototype, \"noFormatToggle\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"name\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"hoist\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"opacity\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"uppercase\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"swatches\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlColorPicker.prototype, \"form\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"required\", 2);\n__decorateClass([\n  watch(\"format\", { waitUntilFirstUpdate: true })\n], SlColorPicker.prototype, \"handleFormatChange\", 1);\n__decorateClass([\n  watch(\"opacity\", { waitUntilFirstUpdate: true })\n], SlColorPicker.prototype, \"handleOpacityChange\", 1);\n__decorateClass([\n  watch(\"value\")\n], SlColorPicker.prototype, \"handleValueChange\", 1);\n\nexport {\n  SlColorPicker\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}